// This code has been generated by the C2W code generator.
// Do not edit manually!

package TESDemoIntegrationModel;

import java.util.StringTokenizer;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import hla.rti.EventRetractionHandle;
import hla.rti.LogicalTime;
import hla.rti.ReceivedInteraction;
import c2w.hla.*;

public class Mapper extends MapperBase {

    private static Pattern pattern = Pattern.compile( "[^#]" );

	public Mapper(String federationId, String federateId)
			throws Exception {
		super(federationId, federateId);
	}

    public Mapper( String[] args ) throws Exception {
        super( args );
    }
    
    private static double STEP_EPSILON = 0.000001;
    
    public boolean isMapperFederate() {
        return true;
    }

    
    
	///////////////////////////////////////////////////////////////////////////////////////
	//
	// For ComplexMappingConnection (ID: 8f801324_7135_38c7_59ea_db49481a5380) between interactions:
	//
	//         GridlabDOutput --to--> NetworkPacket
	//
	// This ComplexMappingConnection is located at:
	//
	//         Mappings/Mapper
	//
	///////////////////////////////////////////////////////////////////////////////////////
	public boolean isGuardConditionMet_GridlabDOutput_to_NetworkPacket_8f801324_7135_38c7_59ea_db49481a5380(GridlabDOutput i1) {
		return !(i1.get_ObjectName().startsWith( "Market" ));
		
	}


	public NetworkPacket map_GridlabDOutput_to_NetworkPacket_8f801324_7135_38c7_59ea_db49481a5380(GridlabDOutput i1) {
		NetworkPacket o1 = create_NetworkPacket();
		InteractionRoot o1IR = (InteractionRoot) o1;
	    
	    
		o1.set_senderHost("TES2016DemoNetwork.GridlabD");
o1.set_senderHostApp("BasicUdpAppWrapper");
o1.set_receiverHostApp("BasicUdpAppWrapper");
o1.set_senderAppIndex(0);
o1.set_receiverAppIndex(0);
o1.set_receiverAppInterface("eth0");
o1.set_packetType("GridlabDOutput");
o1.set_receiverHost("TES2016DemoNetwork.Generator1PriceController");
o1.set_data("" + i1.get_ObjectName() + "*@*" + i1.get_Parameter() + "*@*" + i1.get_Value() + "*@*" + i1.get_Units() + "*@*" + i1.get_Operation());
o1.set_numBytes(1024);

		

		o1.set_originFed(i1.get_originFed());
		o1.set_actualLogicalGenerationTime(i1.get_actualLogicalGenerationTime());

		return o1;
	}
    
	///////////////////////////////////////////////////////////////////////////////////////
	//
	// For ComplexMappingConnection (ID: dbbfed18_94db_b0c7_59ea_db49481a5380) between interactions:
	//
	//         GridlabDOutput --to--> NetworkPacket
	//
	// This ComplexMappingConnection is located at:
	//
	//         Mappings/Mapper
	//
	///////////////////////////////////////////////////////////////////////////////////////
	public boolean isGuardConditionMet_GridlabDOutput_to_NetworkPacket_dbbfed18_94db_b0c7_59ea_db49481a5380(GridlabDOutput i1) {
		return !(i1.get_ObjectName().startsWith( "Market" ));
		
	}


	public NetworkPacket map_GridlabDOutput_to_NetworkPacket_dbbfed18_94db_b0c7_59ea_db49481a5380(GridlabDOutput i1) {
		NetworkPacket o1 = create_NetworkPacket();
		InteractionRoot o1IR = (InteractionRoot) o1;
	    
	    
		o1.set_senderHost("TES2016DemoNetwork.GridlabD");
o1.set_senderHostApp("BasicUdpAppWrapper");
o1.set_receiverHostApp("BasicUdpAppWrapper");
o1.set_senderAppIndex(0);
o1.set_receiverAppIndex(0);
o1.set_receiverAppInterface("eth0");
o1.set_packetType("GridlabDOutput");
o1.set_receiverHost("TES2016DemoNetwork.Generator2PriceController");
o1.set_data("" + i1.get_ObjectName() + "*@*" + i1.get_Parameter() + "*@*" + i1.get_Value() + "*@*" + i1.get_Units() + "*@*" + i1.get_Operation());
o1.set_numBytes(1024);

		

		o1.set_originFed(i1.get_originFed());
		o1.set_actualLogicalGenerationTime(i1.get_actualLogicalGenerationTime());

		return o1;
	}
    
	///////////////////////////////////////////////////////////////////////////////////////
	//
	// For ComplexMappingConnection (ID: 4c801324_7135_38c7_59ea_db49481a5380) between interactions:
	//
	//         GridlabDOutput --to--> NetworkPacket
	//
	// This ComplexMappingConnection is located at:
	//
	//         Mappings/Mapper
	//
	///////////////////////////////////////////////////////////////////////////////////////
	public boolean isGuardConditionMet_GridlabDOutput_to_NetworkPacket_4c801324_7135_38c7_59ea_db49481a5380(GridlabDOutput i1) {
		return i1.get_ObjectName().startsWith( "Market" );
		
	}


	public NetworkPacket map_GridlabDOutput_to_NetworkPacket_4c801324_7135_38c7_59ea_db49481a5380(GridlabDOutput i1) {
		NetworkPacket o1 = create_NetworkPacket();
		InteractionRoot o1IR = (InteractionRoot) o1;
	    
	    
		o1.set_senderHost("TES2016DemoNetwork.GridlabD");
o1.set_senderHostApp("BasicUdpAppWrapper");
o1.set_receiverHostApp("BasicUdpAppWrapper");
o1.set_senderAppIndex(0);
o1.set_receiverAppIndex(0);
o1.set_receiverAppInterface("eth0");
o1.set_packetType("GridlabDOutput");
o1.set_receiverHost("TES2016DemoNetwork.Community2DemandController");
o1.set_data("" + i1.get_ObjectName() + "*@*" + i1.get_Parameter() + "*@*" + i1.get_Value() + "*@*" + i1.get_Units() + "*@*" + i1.get_Operation());
o1.set_numBytes(1024);

		

		o1.set_originFed(i1.get_originFed());
		o1.set_actualLogicalGenerationTime(i1.get_actualLogicalGenerationTime());

		return o1;
	}
    
	///////////////////////////////////////////////////////////////////////////////////////
	//
	// For ComplexMappingConnection (ID: 8c801324_7135_38c7_59ea_db49481a5380) between interactions:
	//
	//         GridlabDOutput --to--> NetworkPacket
	//
	// This ComplexMappingConnection is located at:
	//
	//         Mappings/Mapper
	//
	///////////////////////////////////////////////////////////////////////////////////////
	public boolean isGuardConditionMet_GridlabDOutput_to_NetworkPacket_8c801324_7135_38c7_59ea_db49481a5380(GridlabDOutput i1) {
		return i1.get_ObjectName().startsWith( "Market" );
		
	}


	public NetworkPacket map_GridlabDOutput_to_NetworkPacket_8c801324_7135_38c7_59ea_db49481a5380(GridlabDOutput i1) {
		NetworkPacket o1 = create_NetworkPacket();
		InteractionRoot o1IR = (InteractionRoot) o1;
	    
	    
		o1.set_senderHost("TES2016DemoNetwork.GridlabD");
o1.set_senderHostApp("BasicUdpAppWrapper");
o1.set_receiverHostApp("BasicUdpAppWrapper");
o1.set_senderAppIndex(0);
o1.set_receiverAppIndex(0);
o1.set_receiverAppInterface("eth0");
o1.set_packetType("GridlabDOutput");
o1.set_receiverHost("TES2016DemoNetwork.Community1DemandController");
o1.set_data("" + i1.get_ObjectName() + "*@*" + i1.get_Parameter() + "*@*" + i1.get_Value() + "*@*" + i1.get_Units() + "*@*" + i1.get_Operation());
o1.set_numBytes(1024);

		

		o1.set_originFed(i1.get_originFed());
		o1.set_actualLogicalGenerationTime(i1.get_actualLogicalGenerationTime());

		return o1;
	}
    
	///////////////////////////////////////////////////////////////////////////////////////
	//
	// For ComplexMappingConnection (ID: 1bbfed18_94db_b0c7_59ea_db49481a5380) between interactions:
	//
	//         NetworkPacket --to--> GridlabDOutput
	//
	// This ComplexMappingConnection is located at:
	//
	//         Mappings/Mapper
	//
	///////////////////////////////////////////////////////////////////////////////////////
	public boolean isGuardConditionMet_NetworkPacket_to_GridlabDOutput_1bbfed18_94db_b0c7_59ea_db49481a5380(NetworkPacket i1) {
		return true;
		
	}


	public GridlabDOutput map_NetworkPacket_to_GridlabDOutput_1bbfed18_94db_b0c7_59ea_db49481a5380(NetworkPacket i1) {
		GridlabDOutput o1 = create_GridlabDOutput();
		InteractionRoot o1IR = (InteractionRoot) o1;
	    
		boolean __NETWORK_PACKET_CORRUPT__ = false;
		InteractionRoot __I1__ = (InteractionRoot) i1;
		if(__I1__ instanceof NetworkPacket ) {
	    	int numParams = o1.getParameterNames().size();
	    	String __DATA__ = ((NetworkPacket) __I1__).get_data();
	    	if(numParams > 0) {
			    Matcher matcher = pattern.matcher( __DATA__ );
			    if ( !matcher.find() ) {
	    			__NETWORK_PACKET_CORRUPT__ = true;
	    			if(o1IR instanceof NetworkPacket && __DATA__.length() == 0 ) {
			    		__NETWORK_PACKET_CORRUPT__ = false;
			    	}
	    		}
	    	} else {
	    		if(__DATA__.length() > 0) {
	    			__NETWORK_PACKET_CORRUPT__ = true;
	    		}
	    	}
		}
		if(!__NETWORK_PACKET_CORRUPT__) {
		    
			String data = i1.get_data();
StringTokenizer t = new StringTokenizer( data, "*@*");
o1.set_ObjectName(t.nextToken());
o1.set_Parameter(t.nextToken());
o1.set_Value(Double.parseDouble(t.nextToken()));
o1.set_Units(t.nextToken());
o1.set_Operation(Integer.parseInt(t.nextToken()));
o1.set_federateFilter("Community1DemandController");

		}
		

		o1.set_originFed(i1.get_originFed());
		o1.set_actualLogicalGenerationTime(i1.get_actualLogicalGenerationTime());

		return o1;
	}
    
	///////////////////////////////////////////////////////////////////////////////////////
	//
	// For ComplexMappingConnection (ID: d8bfed18_94db_b0c7_59ea_db49481a5380) between interactions:
	//
	//         NetworkPacket --to--> GridlabDOutput
	//
	// This ComplexMappingConnection is located at:
	//
	//         Mappings/Mapper
	//
	///////////////////////////////////////////////////////////////////////////////////////
	public boolean isGuardConditionMet_NetworkPacket_to_GridlabDOutput_d8bfed18_94db_b0c7_59ea_db49481a5380(NetworkPacket i1) {
		return true;
		
	}


	public GridlabDOutput map_NetworkPacket_to_GridlabDOutput_d8bfed18_94db_b0c7_59ea_db49481a5380(NetworkPacket i1) {
		GridlabDOutput o1 = create_GridlabDOutput();
		InteractionRoot o1IR = (InteractionRoot) o1;
	    
		boolean __NETWORK_PACKET_CORRUPT__ = false;
		InteractionRoot __I1__ = (InteractionRoot) i1;
		if(__I1__ instanceof NetworkPacket ) {
	    	int numParams = o1.getParameterNames().size();
	    	String __DATA__ = ((NetworkPacket) __I1__).get_data();
	    	if(numParams > 0) {
			    Matcher matcher = pattern.matcher( __DATA__ );
			    if ( !matcher.find() ) {
	    			__NETWORK_PACKET_CORRUPT__ = true;
	    			if(o1IR instanceof NetworkPacket && __DATA__.length() == 0 ) {
			    		__NETWORK_PACKET_CORRUPT__ = false;
			    	}
	    		}
	    	} else {
	    		if(__DATA__.length() > 0) {
	    			__NETWORK_PACKET_CORRUPT__ = true;
	    		}
	    	}
		}
		if(!__NETWORK_PACKET_CORRUPT__) {
		    
			String data = i1.get_data();
StringTokenizer t = new StringTokenizer( data, "*@*");
o1.set_ObjectName(t.nextToken());
o1.set_Parameter(t.nextToken());
o1.set_Value(Double.parseDouble(t.nextToken()));
o1.set_Units(t.nextToken());
o1.set_Operation(Integer.parseInt(t.nextToken()));
o1.set_federateFilter("Community2DemandController");

		}
		

		o1.set_originFed(i1.get_originFed());
		o1.set_actualLogicalGenerationTime(i1.get_actualLogicalGenerationTime());

		return o1;
	}
    
	///////////////////////////////////////////////////////////////////////////////////////
	//
	// For ComplexMappingConnection (ID: 18bfed18_94db_b0c7_59ea_db49481a5380) between interactions:
	//
	//         NetworkPacket --to--> GridlabDOutput
	//
	// This ComplexMappingConnection is located at:
	//
	//         Mappings/Mapper
	//
	///////////////////////////////////////////////////////////////////////////////////////
	public boolean isGuardConditionMet_NetworkPacket_to_GridlabDOutput_18bfed18_94db_b0c7_59ea_db49481a5380(NetworkPacket i1) {
		return true;
		
	}


	public GridlabDOutput map_NetworkPacket_to_GridlabDOutput_18bfed18_94db_b0c7_59ea_db49481a5380(NetworkPacket i1) {
		GridlabDOutput o1 = create_GridlabDOutput();
		InteractionRoot o1IR = (InteractionRoot) o1;
	    
		boolean __NETWORK_PACKET_CORRUPT__ = false;
		InteractionRoot __I1__ = (InteractionRoot) i1;
		if(__I1__ instanceof NetworkPacket ) {
	    	int numParams = o1.getParameterNames().size();
	    	String __DATA__ = ((NetworkPacket) __I1__).get_data();
	    	if(numParams > 0) {
			    Matcher matcher = pattern.matcher( __DATA__ );
			    if ( !matcher.find() ) {
	    			__NETWORK_PACKET_CORRUPT__ = true;
	    			if(o1IR instanceof NetworkPacket && __DATA__.length() == 0 ) {
			    		__NETWORK_PACKET_CORRUPT__ = false;
			    	}
	    		}
	    	} else {
	    		if(__DATA__.length() > 0) {
	    			__NETWORK_PACKET_CORRUPT__ = true;
	    		}
	    	}
		}
		if(!__NETWORK_PACKET_CORRUPT__) {
		    
			String data = i1.get_data();
StringTokenizer t = new StringTokenizer( data, "*@*");
o1.set_ObjectName(t.nextToken());
o1.set_Parameter(t.nextToken());
o1.set_Value(Double.parseDouble(t.nextToken()));
o1.set_Units(t.nextToken());
o1.set_Operation(Integer.parseInt(t.nextToken()));
o1.set_federateFilter("Generator2PriceController");

		}
		

		o1.set_originFed(i1.get_originFed());
		o1.set_actualLogicalGenerationTime(i1.get_actualLogicalGenerationTime());

		return o1;
	}
    
	///////////////////////////////////////////////////////////////////////////////////////
	//
	// For ComplexMappingConnection (ID: 4f801324_7135_38c7_59ea_db49481a5380) between interactions:
	//
	//         NetworkPacket --to--> GridlabDOutput
	//
	// This ComplexMappingConnection is located at:
	//
	//         Mappings/Mapper
	//
	///////////////////////////////////////////////////////////////////////////////////////
	public boolean isGuardConditionMet_NetworkPacket_to_GridlabDOutput_4f801324_7135_38c7_59ea_db49481a5380(NetworkPacket i1) {
		return true;
		
	}


	public GridlabDOutput map_NetworkPacket_to_GridlabDOutput_4f801324_7135_38c7_59ea_db49481a5380(NetworkPacket i1) {
		GridlabDOutput o1 = create_GridlabDOutput();
		InteractionRoot o1IR = (InteractionRoot) o1;
	    
		boolean __NETWORK_PACKET_CORRUPT__ = false;
		InteractionRoot __I1__ = (InteractionRoot) i1;
		if(__I1__ instanceof NetworkPacket ) {
	    	int numParams = o1.getParameterNames().size();
	    	String __DATA__ = ((NetworkPacket) __I1__).get_data();
	    	if(numParams > 0) {
			    Matcher matcher = pattern.matcher( __DATA__ );
			    if ( !matcher.find() ) {
	    			__NETWORK_PACKET_CORRUPT__ = true;
	    			if(o1IR instanceof NetworkPacket && __DATA__.length() == 0 ) {
			    		__NETWORK_PACKET_CORRUPT__ = false;
			    	}
	    		}
	    	} else {
	    		if(__DATA__.length() > 0) {
	    			__NETWORK_PACKET_CORRUPT__ = true;
	    		}
	    	}
		}
		if(!__NETWORK_PACKET_CORRUPT__) {
		    
			String data = i1.get_data();
StringTokenizer t = new StringTokenizer( data, "*@*");
o1.set_ObjectName(t.nextToken());
o1.set_Parameter(t.nextToken());
o1.set_Value(Double.parseDouble(t.nextToken()));
o1.set_Units(t.nextToken());
o1.set_Operation(Integer.parseInt(t.nextToken()));
o1.set_federateFilter("Generator1PriceController");

		}
		

		o1.set_originFed(i1.get_originFed());
		o1.set_actualLogicalGenerationTime(i1.get_actualLogicalGenerationTime());

		return o1;
	}
    
    
    
    
    

	
	public void execute() throws Exception {
	    double currentTime = 0;

	    AdvanceTimeRequest atr = new AdvanceTimeRequest( currentTime );
	    putAdvanceTimeRequest( atr );

	    readyToPopulate();
	    readyToRun();

	    startAdvanceTimeThread(TIME_ADVANCE_MODE.NEXT_EVENT_REQUEST_AVAILABLE);

	    while( true ) {
	    	System.out.print( "Mapper: Requesting RTI to proceed to (" + currentTime + ")..." );
	    	
	        atr.requestSyncStart();
	        currentTime = atr.getCurrentTime();

	        System.out.println( "granted!" );

	        InteractionRoot interactionRoot;

	        System.out.println("Now waiting to receive an interaction...");
	        while(  ( interactionRoot = getNextInteractionNoWait() ) != null ) {
	            	
				System.out.println( "Mapper: received interaction: \"" + interactionRoot + "\" at time: " + getCurrentTime() );

				boolean interactionMapped = false;			
				
				
				if( interactionRoot instanceof GridlabDOutput ) {
					GridlabDOutput i1 = (GridlabDOutput) interactionRoot;
					
						if(  !(interactionRoot instanceof NetworkPacket) || "NetworkPacket".equals(((NetworkPacket) interactionRoot).get_packetType())  ) {
	
							if( isGuardConditionMet_GridlabDOutput_to_NetworkPacket_8f801324_7135_38c7_59ea_db49481a5380(i1) ) {
								NetworkPacket o1 = map_GridlabDOutput_to_NetworkPacket_8f801324_7135_38c7_59ea_db49481a5380(i1);
								System.out.println( "Mapper: Sending interaction: " + o1 );
								o1.sendInteraction( getRTI(), getMinTSOTimestamp() );
							}
							
							interactionMapped = true;
						}
						
						
				}
				if( interactionRoot instanceof GridlabDOutput ) {
					GridlabDOutput i1 = (GridlabDOutput) interactionRoot;
					
						if(  !(interactionRoot instanceof NetworkPacket) || "NetworkPacket".equals(((NetworkPacket) interactionRoot).get_packetType())  ) {
	
							if( isGuardConditionMet_GridlabDOutput_to_NetworkPacket_dbbfed18_94db_b0c7_59ea_db49481a5380(i1) ) {
								NetworkPacket o1 = map_GridlabDOutput_to_NetworkPacket_dbbfed18_94db_b0c7_59ea_db49481a5380(i1);
								System.out.println( "Mapper: Sending interaction: " + o1 );
								o1.sendInteraction( getRTI(), getMinTSOTimestamp() );
							}
							
							interactionMapped = true;
						}
						
						
				}
				if( interactionRoot instanceof GridlabDOutput ) {
					GridlabDOutput i1 = (GridlabDOutput) interactionRoot;
					
						if(  !(interactionRoot instanceof NetworkPacket) || "NetworkPacket".equals(((NetworkPacket) interactionRoot).get_packetType())  ) {
	
							if( isGuardConditionMet_GridlabDOutput_to_NetworkPacket_4c801324_7135_38c7_59ea_db49481a5380(i1) ) {
								NetworkPacket o1 = map_GridlabDOutput_to_NetworkPacket_4c801324_7135_38c7_59ea_db49481a5380(i1);
								System.out.println( "Mapper: Sending interaction: " + o1 );
								o1.sendInteraction( getRTI(), getMinTSOTimestamp() );
							}
							
							interactionMapped = true;
						}
						
						
				}
				if( interactionRoot instanceof GridlabDOutput ) {
					GridlabDOutput i1 = (GridlabDOutput) interactionRoot;
					
						if(  !(interactionRoot instanceof NetworkPacket) || "NetworkPacket".equals(((NetworkPacket) interactionRoot).get_packetType())  ) {
	
							if( isGuardConditionMet_GridlabDOutput_to_NetworkPacket_8c801324_7135_38c7_59ea_db49481a5380(i1) ) {
								NetworkPacket o1 = map_GridlabDOutput_to_NetworkPacket_8c801324_7135_38c7_59ea_db49481a5380(i1);
								System.out.println( "Mapper: Sending interaction: " + o1 );
								o1.sendInteraction( getRTI(), getMinTSOTimestamp() );
							}
							
							interactionMapped = true;
						}
						
						
				}
				if( interactionRoot instanceof NetworkPacket ) {
					NetworkPacket i1 = (NetworkPacket) interactionRoot;
					
						if(  !(interactionRoot instanceof NetworkPacket) || "GridlabDOutput".equals(((NetworkPacket) interactionRoot).get_packetType())  ) {
	
							if( isGuardConditionMet_NetworkPacket_to_GridlabDOutput_1bbfed18_94db_b0c7_59ea_db49481a5380(i1) ) {
								GridlabDOutput o1 = map_NetworkPacket_to_GridlabDOutput_1bbfed18_94db_b0c7_59ea_db49481a5380(i1);
								System.out.println( "Mapper: Sending interaction: " + o1 );
								o1.sendInteraction( getRTI(), getMinTSOTimestamp() );
							}
							
							interactionMapped = true;
						}
						
						
				}
				if( interactionRoot instanceof NetworkPacket ) {
					NetworkPacket i1 = (NetworkPacket) interactionRoot;
					
						if(  !(interactionRoot instanceof NetworkPacket) || "GridlabDOutput".equals(((NetworkPacket) interactionRoot).get_packetType())  ) {
	
							if( isGuardConditionMet_NetworkPacket_to_GridlabDOutput_d8bfed18_94db_b0c7_59ea_db49481a5380(i1) ) {
								GridlabDOutput o1 = map_NetworkPacket_to_GridlabDOutput_d8bfed18_94db_b0c7_59ea_db49481a5380(i1);
								System.out.println( "Mapper: Sending interaction: " + o1 );
								o1.sendInteraction( getRTI(), getMinTSOTimestamp() );
							}
							
							interactionMapped = true;
						}
						
						
				}
				if( interactionRoot instanceof NetworkPacket ) {
					NetworkPacket i1 = (NetworkPacket) interactionRoot;
					
						if(  !(interactionRoot instanceof NetworkPacket) || "GridlabDOutput".equals(((NetworkPacket) interactionRoot).get_packetType())  ) {
	
							if( isGuardConditionMet_NetworkPacket_to_GridlabDOutput_18bfed18_94db_b0c7_59ea_db49481a5380(i1) ) {
								GridlabDOutput o1 = map_NetworkPacket_to_GridlabDOutput_18bfed18_94db_b0c7_59ea_db49481a5380(i1);
								System.out.println( "Mapper: Sending interaction: " + o1 );
								o1.sendInteraction( getRTI(), getMinTSOTimestamp() );
							}
							
							interactionMapped = true;
						}
						
						
				}
				if( interactionRoot instanceof NetworkPacket ) {
					NetworkPacket i1 = (NetworkPacket) interactionRoot;
					
						if(  !(interactionRoot instanceof NetworkPacket) || "GridlabDOutput".equals(((NetworkPacket) interactionRoot).get_packetType())  ) {
	
							if( isGuardConditionMet_NetworkPacket_to_GridlabDOutput_4f801324_7135_38c7_59ea_db49481a5380(i1) ) {
								GridlabDOutput o1 = map_NetworkPacket_to_GridlabDOutput_4f801324_7135_38c7_59ea_db49481a5380(i1);
								System.out.println( "Mapper: Sending interaction: " + o1 );
								o1.sendInteraction( getRTI(), getMinTSOTimestamp() );
							}
							
							interactionMapped = true;
						}
						
						
				}

				if( !interactionMapped ) {
	          		System.out.println( "Mapper: Received unknown interaction: " + interactionRoot );
	           	}
	        }

	        currentTime = getCurrentTime() + 0.5 + STEP_EPSILON;
	        AdvanceTimeRequest newATR = new AdvanceTimeRequest( currentTime );
	        putAdvanceTimeRequest( newATR );
	        
	        atr.requestSyncEnd();
	        atr = newATR;
	    }
	}

	
	/**
	 * @param args
	 */
	public static void main(String[] args) {
	    System.out.println( "Mapper federate starting" );
	    try {
	    	Mapper mapperFed = new Mapper( args );
	        mapperFed.execute();
	    } catch ( Exception e ) {
	        System.err.println( "Exception caught: " + e.getMessage() );
	        e.printStackTrace();
	    }
	}

}
